# Generated by Django 2.1.2 on 2018-10-26 17:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alternative',
            fields=[
                ('id_alternative', models.AutoField(primary_key=True, serialize=False)),
                ('name_alternative', models.CharField(blank=True, max_length=255, null=True)),
                ('usage_alternative', models.CharField(blank=True, max_length=255, null=True)),
                ('flag_alternative', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'alternative',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ApplicationSystem',
            fields=[
                ('id_applicationsystem', models.AutoField(primary_key=True, serialize=False)),
                ('name_applicationsystem', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'applicationsystem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id_component', models.AutoField(primary_key=True, serialize=False)),
                ('name_component', models.CharField(blank=True, max_length=255, null=True)),
                ('id_applicationsystem', models.ForeignKey(blank=True, db_column='id_applicationsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.ApplicationSystem')),
            ],
            options={
                'db_table': 'component',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Defect',
            fields=[
                ('id_defect', models.AutoField(primary_key=True, serialize=False)),
                ('rel_name', models.CharField(blank=True, db_column='REL_NAME', max_length=255, null=True)),
                ('date_defect_start', models.DateTimeField(blank=True, null=True)),
                ('date_defect_end', models.DateTimeField(blank=True, null=True)),
                ('id_recyc', models.IntegerField(blank=True, null=True)),
                ('id_recyc_parent', models.IntegerField(blank=True, null=True)),
                ('name_recyc', models.CharField(blank=True, max_length=255, null=True)),
                ('date_recyc_start', models.DateTimeField(blank=True, null=True)),
                ('date_recyc_end', models.DateTimeField(blank=True, null=True)),
                ('id_bug_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('statut_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('responsible_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('subject_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('summary_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('description_bg', models.TextField(blank=True, null=True)),
                ('comments_dev_bg', models.TextField(blank=True, null=True)),
                ('reproductible_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('severity_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('priority_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('detected_bg', models.CharField(blank=True, max_length=255, null=True)),
                ('date_bg_detection', models.DateTimeField(blank=True, null=True)),
                ('version_bg_detection', models.CharField(blank=True, max_length=255, null=True)),
                ('actual_bg_fix_time', models.CharField(blank=True, max_length=255, null=True)),
                ('date_closing_bg', models.DateTimeField(blank=True, null=True)),
                ('ver_bug_bg_stamp', models.CharField(blank=True, max_length=255, null=True)),
                ('bg_vts', models.CharField(blank=True, db_column='BG_VTS', max_length=255, null=True)),
                ('bg_detected_in_rel', models.CharField(blank=True, db_column='BG_DETECTED_IN_REL', max_length=255, null=True)),
                ('bg_detected_in_recyc', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'defect',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id_eng', models.AutoField(primary_key=True, serialize=False)),
                ('eng_fn', models.CharField(blank=True, max_length=255, null=True)),
                ('eng_ln', models.CharField(blank=True, max_length=255, null=True)),
                ('date_arrival', models.DateTimeField(blank=True, null=True)),
                ('date_departure', models.DateTimeField(blank=True, null=True)),
                ('id_scientific', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('departement', models.CharField(blank=True, max_length=255, null=True)),
                ('section', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('function', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engineer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Functionnality',
            fields=[
                ('id_functionnality', models.AutoField(primary_key=True, serialize=False)),
                ('name_functionnality', models.CharField(blank=True, max_length=255, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=255, null=True)),
                ('type_functionnality', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('dimension', models.CharField(blank=True, max_length=255, null=True)),
                ('id_component', models.ForeignKey(blank=True, db_column='id_component', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Component')),
            ],
            options={
                'db_table': 'functionnality',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id_incident', models.AutoField(primary_key=True, serialize=False)),
                ('type_application', models.CharField(blank=True, max_length=255, null=True)),
                ('classification_incident', models.CharField(blank=True, max_length=255, null=True)),
                ('analyse_incident', models.CharField(blank=True, max_length=255, null=True)),
                ('date_incident', models.DateTimeField(blank=True, null=True)),
                ('owner_incident', models.IntegerField(blank=True, null=True)),
                ('commentaire_incident', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'incident',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InputParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=120)),
                ('type_value', models.CharField(choices=[('number', 'Number'), ('string', 'String')], default='STRING', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OutputParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=120)),
                ('type_value', models.CharField(choices=[('number', 'Number'), ('string', 'String')], default='NUMBER', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('label', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PredictModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('label', models.CharField(default='', max_length=100)),
                ('function_name', models.CharField(blank=True, default='', max_length=100)),
                ('parameters', models.ManyToManyField(to='incidentsprediction.Parameter')),
            ],
        ),
        migrations.CreateModel(
            name='RelDataVcomponent',
            fields=[
                ('rel_data_vcomponent', models.AutoField(primary_key=True, serialize=False)),
                ('id_data', models.IntegerField(blank=True, null=True)),
                ('comment_data_vcomponent', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_data_vcomponent', models.IntegerField(blank=True, null=True)),
                ('date_data_vcomponent', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_data_vcomponent',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelInputParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(default='', max_length=100)),
                ('inputparameter', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.InputParameter')),
            ],
        ),
        migrations.CreateModel(
            name='RelResultValternative',
            fields=[
                ('id_rel_result_valternative', models.AutoField(primary_key=True, serialize=False)),
                ('comment_result_valternative', models.BooleanField(blank=True, null=True)),
                ('date_result_valternative', models.DateTimeField(blank=True, null=True)),
                ('owner_result_valternative', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_result_valternative',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelValternativeVdata',
            fields=[
                ('rel_valternative_vdata', models.AutoField(primary_key=True, serialize=False)),
                ('comment_valternative_vdata', models.CharField(blank=True, max_length=255, null=True)),
                ('date_valternative_vdata', models.DateTimeField(blank=True, null=True)),
                ('owner_valternative_vdata', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_valternative_vdata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelVapplicationsystemVcomponent',
            fields=[
                ('rel_applicationsystem_vcomponent', models.AutoField(primary_key=True, serialize=False)),
                ('owner_applicationsystem_vcomponent', models.IntegerField(blank=True, null=True)),
                ('comment_applicationsystem_vcomponent', models.CharField(blank=True, max_length=255, null=True)),
                ('date_applicationsystem_vcomponent', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_vapplicationsystem_vcomponent',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelVcomponentVfunctionnality',
            fields=[
                ('rel_vcomponent_vfunctionnality', models.AutoField(primary_key=True, serialize=False)),
                ('comment_vcomponent_vfunctionnality', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_vcomponent_vfunctionnality', models.IntegerField(blank=True, null=True)),
                ('date_vcomponent_vfunctionnality', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_vcomponent_vfunctionnality',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelVfunctionnalityDefect',
            fields=[
                ('rel_vfunctionnality_defect', models.AutoField(primary_key=True, serialize=False)),
                ('comment_vfunctionnality_defect', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_vfunctionnality_defect', models.IntegerField(blank=True, null=True)),
                ('date_vfunctionnality_defect', models.DateTimeField(blank=True, null=True)),
                ('id_defect', models.ForeignKey(blank=True, db_column='id_defect', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Defect')),
            ],
            options={
                'db_table': 'rel_vfunctionnality_defect',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelVfunctionnalityValternative',
            fields=[
                ('rel_vfunctionnality_valternative', models.AutoField(primary_key=True, serialize=False)),
                ('comment_vfunctionnality_valternative', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_vfunctionnality_valternative', models.IntegerField(blank=True, null=True)),
                ('date_vfunctionnality_valternative', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_vfunctionnality_valternative',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelVsystemofsystemVsystem',
            fields=[
                ('id_rel_vsystemofsystem_vsystem', models.AutoField(primary_key=True, serialize=False)),
                ('owner_rel_vsystemofsystem_vsystem', models.IntegerField(blank=True, null=True)),
                ('date_rel_vsystemofsystem_vsystem', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_vsystemofsystem_vsystem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelVsystemVapplicationsystem',
            fields=[
                ('rel_vsystem_vapplicationsystem', models.AutoField(primary_key=True, serialize=False)),
                ('comment_vsystem_vapplicationsystem', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_vsystem_vapplicationsystem', models.IntegerField(blank=True, null=True)),
                ('date_vsystem_vapplicationsystem', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_vsystem_vapplicationsystem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelVsystemVincident',
            fields=[
                ('rel_vsystem_incidents', models.AutoField(primary_key=True, serialize=False)),
                ('comment_vsystem_incidents', models.CharField(blank=True, max_length=255, null=True)),
                ('date_vsystem_incidents', models.DateTimeField(blank=True, null=True)),
                ('owner_vsystem_incidents', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_vsystem_vincident',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id_report', models.AutoField(primary_key=True, serialize=False)),
                ('id_eng', models.IntegerField(blank=True, null=True)),
                ('id_eng_report_review', models.IntegerField(blank=True, null=True)),
                ('id_eng_report_approval', models.IntegerField(blank=True, null=True)),
                ('detail_report', models.CharField(blank=True, max_length=50, null=True)),
                ('report_cath', models.IntegerField(blank=True, null=True)),
                ('name_report', models.CharField(blank=True, max_length=255, null=True)),
                ('date_report', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id_system', models.AutoField(primary_key=True, serialize=False)),
                ('name_system', models.CharField(blank=True, max_length=255, null=True)),
                ('type_system', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_system', models.ForeignKey(blank=True, db_column='owner_system', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
            ],
            options={
                'db_table': 'system',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Systemofsystem',
            fields=[
                ('id_systemofsystem', models.AutoField(primary_key=True, serialize=False)),
                ('name_systemofsystem', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_systemofsystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
            ],
            options={
                'db_table': 'systemofsystem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TableDesErreurs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f1', models.FloatField(blank=True, db_column='F1', null=True)),
                ('f2', models.FloatField(blank=True, db_column='F2', null=True)),
                ('f3', models.FloatField(blank=True, db_column='F3', null=True)),
                ('f4', models.DateTimeField(blank=True, db_column='F4', null=True)),
                ('f5', models.FloatField(blank=True, db_column='F5', null=True)),
                ('f6', models.FloatField(blank=True, db_column='F6', null=True)),
            ],
            options={
                'db_table': 'Table des erreurs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TechnicalResult',
            fields=[
                ('id_technical_result', models.AutoField(primary_key=True, serialize=False)),
                ('titre_result', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_result', models.CharField(blank=True, max_length=255, null=True)),
                ('date_result', models.DateTimeField(blank=True, null=True)),
                ('comment_result', models.CharField(blank=True, max_length=255, null=True)),
                ('report_result', models.ForeignKey(blank=True, db_column='report_result', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Report')),
            ],
            options={
                'db_table': 'technical_result',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Valternative',
            fields=[
                ('id_valternative', models.AutoField(primary_key=True, serialize=False)),
                ('version_valternative', models.IntegerField(blank=True, null=True)),
                ('date_valternative', models.DateTimeField(blank=True, null=True)),
                ('comment_valternative', models.CharField(blank=True, max_length=255, null=True)),
                ('id_alternative', models.ForeignKey(blank=True, db_column='id_alternative', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Alternative')),
                ('owner_valternative', models.ForeignKey(blank=True, db_column='owner_valternative', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
            ],
            options={
                'db_table': 'valternative',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_value', models.CharField(choices=[('number', 'Number'), ('string', 'String')], default='STRING', max_length=10)),
                ('value', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vapplicationsystem',
            fields=[
                ('id_vapplicationsystem', models.AutoField(primary_key=True, serialize=False)),
                ('version_vapplicationsystem', models.IntegerField(blank=True, null=True)),
                ('date_vapplicationsystem', models.DateTimeField(blank=True, null=True)),
                ('comment_vapplicationsystem', models.CharField(blank=True, max_length=255, null=True)),
                ('applicationsystem', models.ForeignKey(blank=True, db_column='id_applicationsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.ApplicationSystem')),
                ('owner_vapplicationsystem', models.ForeignKey(blank=True, db_column='owner_vapplicationsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
            ],
            options={
                'db_table': 'vapplicationsystem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vcomponent',
            fields=[
                ('id_vcomponent', models.AutoField(primary_key=True, serialize=False)),
                ('version_vcomponent', models.CharField(blank=True, max_length=255, null=True)),
                ('date_vcomponent', models.DateTimeField(blank=True, null=True)),
                ('comment_vcomponent', models.CharField(blank=True, max_length=255, null=True)),
                ('id_component', models.ForeignKey(blank=True, db_column='id_component', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Component')),
                ('owner_vcomponent', models.ForeignKey(blank=True, db_column='owner_vcomponent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
            ],
            options={
                'db_table': 'vcomponent',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vdata',
            fields=[
                ('id_vdata', models.AutoField(primary_key=True, serialize=False)),
                ('value_vdata', models.IntegerField(blank=True, null=True)),
                ('date_vdata', models.DateTimeField(blank=True, null=True)),
                ('comment_vdata', models.CharField(blank=True, max_length=255, null=True)),
                ('show_vdata', models.CharField(blank=True, max_length=255, null=True)),
                ('value_vdata_link', models.CharField(blank=True, max_length=255, null=True)),
                ('id_alternative', models.ForeignKey(blank=True, db_column='id_alternative', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Alternative')),
                ('owner_vdata', models.ForeignKey(blank=True, db_column='owner_vdata', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
                ('report_vdata', models.ForeignKey(blank=True, db_column='report_vdata', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Report')),
            ],
            options={
                'db_table': 'vdata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vfunctionnality',
            fields=[
                ('id_vfunctionnality', models.AutoField(primary_key=True, serialize=False)),
                ('version_vfunctionnality', models.CharField(blank=True, max_length=255, null=True)),
                ('date_vfunctionnality', models.DateTimeField(blank=True, null=True)),
                ('comment_vfunctionnality', models.CharField(blank=True, max_length=255, null=True)),
                ('id_functionnality', models.ForeignKey(blank=True, db_column='id_functionnality', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Functionnality')),
                ('owner_vfunctionnality', models.ForeignKey(blank=True, db_column='owner_vfunctionnality', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
            ],
            options={
                'db_table': 'vfunctionnality',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vincident',
            fields=[
                ('id_vincident', models.AutoField(primary_key=True, serialize=False)),
                ('postprod', models.CharField(blank=True, max_length=255, null=True)),
                ('vincident_number', models.CharField(blank=True, max_length=255, null=True)),
                ('availability_level', models.CharField(blank=True, max_length=255, null=True)),
                ('date_vincident_creation', models.DateTimeField(blank=True, null=True)),
                ('configuration_element', models.CharField(blank=True, max_length=255, null=True)),
                ('brief_description', models.CharField(blank=True, max_length=255, null=True)),
                ('statut', models.CharField(blank=True, db_column='Statut', max_length=255, null=True)),
                ('date_vincident_update', models.DateTimeField(blank=True, null=True)),
                ('priority_vincident', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_vincident', models.CharField(blank=True, max_length=255, null=True)),
                ('description_vincident', models.TextField(blank=True, null=True)),
                ('assigination_vincident_group', models.CharField(blank=True, max_length=255, null=True)),
                ('date_vincident_cloture', models.DateTimeField(blank=True, null=True)),
                ('version_vincident_number', models.CharField(blank=True, max_length=255, null=True)),
                ('tags_vincident', models.CharField(blank=True, max_length=255, null=True)),
                ('code_vincident_resolution', models.CharField(blank=True, max_length=255, null=True)),
                ('comment_vincident_resolution_visible_pour_les_clients_field', models.CharField(blank=True, db_column='comment_vincident_resolution (Visible pour les clients)', max_length=255, null=True)),
                ('date_vincident_resolution', models.DateTimeField(blank=True, null=True)),
                ('comment_vincident_note_work', models.TextField(blank=True, null=True)),
                ('owner_vincident', models.CharField(blank=True, max_length=255, null=True)),
                ('state_vincident', models.CharField(blank=True, max_length=255, null=True)),
                ('id_incident', models.ForeignKey(blank=True, db_column='id_incident', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Incident')),
            ],
            options={
                'db_table': 'vincident',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vsystem',
            fields=[
                ('id_vsystem', models.AutoField(primary_key=True, serialize=False)),
                ('version_vsystem', models.IntegerField(blank=True, null=True)),
                ('date_vsystem', models.DateTimeField(blank=True, null=True)),
                ('comment_vsystem', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_vsystem', models.ForeignKey(blank=True, db_column='owner_vsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
                ('system', models.ForeignKey(blank=True, db_column='id_system', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.System')),
            ],
            options={
                'db_table': 'vsystem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vsystemofsystem',
            fields=[
                ('id_vsystemofsystem', models.AutoField(primary_key=True, serialize=False)),
                ('name_vsystemofsystem', models.CharField(blank=True, max_length=255, null=True)),
                ('date_vsystemofsystem', models.DateTimeField(blank=True, null=True)),
                ('comment_vsystemofsystem', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_vsystemofsystem', models.ForeignKey(blank=True, db_column='owner_vsystemofsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer')),
                ('systemofsystem', models.ForeignKey(blank=True, db_column='id_systemofsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Systemofsystem')),
            ],
            options={
                'db_table': 'vsystemofsystem',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='system',
            name='systemofsystem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='incidentsprediction.Systemofsystem'),
        ),
        migrations.AddField(
            model_name='relvsystemvincident',
            name='id_incidents',
            field=models.ForeignKey(blank=True, db_column='id_incidents', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vincident'),
        ),
        migrations.AddField(
            model_name='relvsystemvincident',
            name='id_vsystem',
            field=models.ForeignKey(blank=True, db_column='id_vsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vsystem'),
        ),
        migrations.AddField(
            model_name='relvsystemvapplicationsystem',
            name='id_vapplicationsystem',
            field=models.ForeignKey(blank=True, db_column='id_vapplicationsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vapplicationsystem'),
        ),
        migrations.AddField(
            model_name='relvsystemvapplicationsystem',
            name='id_vsystem',
            field=models.ForeignKey(blank=True, db_column='id_vsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vsystem'),
        ),
        migrations.AddField(
            model_name='relvsystemofsystemvsystem',
            name='id_vsystem',
            field=models.ForeignKey(blank=True, db_column='id_vsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vsystem'),
        ),
        migrations.AddField(
            model_name='relvsystemofsystemvsystem',
            name='id_vsystemofsystem',
            field=models.ForeignKey(blank=True, db_column='id_vsystemofsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vsystemofsystem'),
        ),
        migrations.AddField(
            model_name='relvfunctionnalityvalternative',
            name='id_valternative',
            field=models.ForeignKey(blank=True, db_column='id_valternative', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Valternative'),
        ),
        migrations.AddField(
            model_name='relvfunctionnalityvalternative',
            name='id_vfunctionnality',
            field=models.ForeignKey(blank=True, db_column='id_vfunctionnality', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vfunctionnality'),
        ),
        migrations.AddField(
            model_name='relvfunctionnalitydefect',
            name='id_vfunctionnality',
            field=models.ForeignKey(blank=True, db_column='id_vfunctionnality', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vfunctionnality'),
        ),
        migrations.AddField(
            model_name='relvcomponentvfunctionnality',
            name='id_vcomponent',
            field=models.ForeignKey(blank=True, db_column='id_vcomponent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vcomponent'),
        ),
        migrations.AddField(
            model_name='relvcomponentvfunctionnality',
            name='id_vfunctionnality',
            field=models.ForeignKey(blank=True, db_column='id_vfunctionnality', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vfunctionnality'),
        ),
        migrations.AddField(
            model_name='relvapplicationsystemvcomponent',
            name='id_vapplicationsystem',
            field=models.ForeignKey(blank=True, db_column='id_vapplicationsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vapplicationsystem'),
        ),
        migrations.AddField(
            model_name='relvapplicationsystemvcomponent',
            name='id_vcomponent',
            field=models.ForeignKey(blank=True, db_column='id_vcomponent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vcomponent'),
        ),
        migrations.AddField(
            model_name='relvalternativevdata',
            name='id_valternative',
            field=models.ForeignKey(blank=True, db_column='id_valternative', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Valternative'),
        ),
        migrations.AddField(
            model_name='relvalternativevdata',
            name='id_vdata',
            field=models.ForeignKey(blank=True, db_column='id_vdata', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vdata'),
        ),
        migrations.AddField(
            model_name='relresultvalternative',
            name='id_result',
            field=models.ForeignKey(blank=True, db_column='id_result', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.TechnicalResult'),
        ),
        migrations.AddField(
            model_name='relresultvalternative',
            name='id_valternative',
            field=models.ForeignKey(blank=True, db_column='id_valternative', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Valternative'),
        ),
        migrations.AddField(
            model_name='relinputparameter',
            name='vapplicationsystem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vapplicationsystem'),
        ),
        migrations.AddField(
            model_name='relinputparameter',
            name='vsystem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vsystem'),
        ),
        migrations.AddField(
            model_name='reldatavcomponent',
            name='id_vcomponent',
            field=models.ForeignKey(blank=True, db_column='id_vcomponent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Vcomponent'),
        ),
        migrations.AddField(
            model_name='parameter',
            name='values',
            field=models.ManyToManyField(to='incidentsprediction.Value'),
        ),
        migrations.AddField(
            model_name='incident',
            name='id_systemofsystem',
            field=models.ForeignKey(blank=True, db_column='id_systemofsystem', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Systemofsystem'),
        ),
        migrations.AddField(
            model_name='defect',
            name='id_report',
            field=models.ForeignKey(blank=True, db_column='id_report', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Report'),
        ),
        migrations.AddField(
            model_name='component',
            name='owner_component',
            field=models.ForeignKey(blank=True, db_column='owner_component', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer'),
        ),
        migrations.AddField(
            model_name='applicationsystem',
            name='owner_applicationsystem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Engineer'),
        ),
        migrations.AddField(
            model_name='applicationsystem',
            name='system',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.System'),
        ),
        migrations.AddField(
            model_name='alternative',
            name='id_functionnality',
            field=models.ForeignKey(blank=True, db_column='id_functionnality', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='incidentsprediction.Functionnality'),
        ),
    ]
